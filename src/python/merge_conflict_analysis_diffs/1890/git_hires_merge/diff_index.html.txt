====1
1:5c
      <link rel="stylesheet" type="text/css" href="site.css" media="screen" />
2:4a
3:4a
====1
1:22,43c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /user</code></pre></div>
      <div class="method-summary"><span class="nickname">createUser</span> Create user</div>
      <div class="method-notes">This can only be done by the logged in user.</div>
  
      <h3 class="field-label">Parameters</h3>
      <div class="field-items">
        <div class="param">body (optional)</div>
  
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; Created user object </div>
        
      </div>  <!-- field-items -->
      <h3 class="field-label">Return type</h3>
  
      <div class="return-type"><a href="#"></a></div>
  
      
    </div> <!-- method -->
    <hr>
    
    <div class="method">
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /user/createWithArray</code></pre></div>
      <div class="method-summary"><span class="nickname">createUsersWithArrayInput</span> Creates list of users with given input array</div>
2:21,23c
3:21,23c
      <div class="method-path"><pre class="put"><code class="huge"><span>put</span>: /pet</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Pet</span></div>
      <div class="method-summary"><span class="nickname">updatePet</span> Update an existing pet</div>
====1
1:50c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; List of user object </div>
2:30c
3:30c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; Pet object that needs to be added to the store </div>
====1
1:62,63c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /user/createWithList</code></pre></div>
      <div class="method-summary"><span class="nickname">createUsersWithListInput</span> Creates list of users with given input array</div>
2:42,44c
3:42,44c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /pet</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Pet</span></div>
      <div class="method-summary"><span class="nickname">addPet</span> Add a new pet to the store</div>
====1
1:70c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; List of user object </div>
2:51c
3:51c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; Pet object that needs to be added to the store </div>
====1
1:82,84c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /user/login</code></pre></div>
      <div class="method-summary"><span class="nickname">loginUser</span> Logs user into the system</div>
      <div class="method-notes"></div>
2:63,66c
3:63,66c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /pet/findByStatus</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Pet</span></div>
      <div class="method-summary"><span class="nickname">findPetsByStatus</span> Finds Pets by status</div>
      <div class="method-notes">Multiple status values can be provided with comma seperated strings</div>
====1
1:88,91c
        <div class="param">username (optional)</div>
  
        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; The user name for login </div>
        <div class="param">password (optional)</div>
2:70c
3:70c
        <div class="param">status (optional)</div>
====1
1:93c
        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; The password for login in clear text </div>
2:72c
3:72c
        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Status values that need to be considered for filter default: available</div>
====1
1:98c
      <div class="return-type"><a href="#">String</a></div>
2:77c
3:77c
      <div class="return-type"><a href="#array">array[Pet]</a></div>
====1
1:103c
      <pre class="example"><code>"aeiou"</code></pre>
2:82,95c
3:82,95c
      <pre class="example"><code>[ {
    &quot;tags&quot; : [ {
      &quot;id&quot; : 123456789,
      &quot;name&quot; : &quot;aeiou&quot;
    } ],
    &quot;id&quot; : 123456789,
    &quot;category&quot; : {
      &quot;id&quot; : 123456789,
      &quot;name&quot; : &quot;aeiou&quot;
    },
    &quot;status&quot; : &quot;aeiou&quot;,
    &quot;name&quot; : &quot;doggie&quot;,
    &quot;photoUrls&quot; : [ &quot;aeiou&quot; ]
  } ]</code></pre>
====1
1:107c
      <pre class="example"><code>string</code></pre>
2:99,104c
3:99,104c
      <pre class="example"><code>&lt;Pet&gt;
    &lt;id&gt;123456&lt;/id&gt;
    &lt;name&gt;doggie&lt;/name&gt;
    &lt;photoUrls&gt;string&lt;/photoUrls&gt;
    &lt;status&gt;string&lt;/status&gt;
  &lt;/Pet&gt;</code></pre>
====1
1:113,115c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /user/logout</code></pre></div>
      <div class="method-summary"><span class="nickname">logoutUser</span> Logs out current logged in user session</div>
      <div class="method-notes"></div>
2:110,113c
3:110,113c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /pet/findByTags</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Pet</span></div>
      <div class="method-summary"><span class="nickname">findPetsByTags</span> Finds Pets by tags</div>
      <div class="method-notes">Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.</div>
====1
1:118a
2:117,119c
3:117,119c
        <div class="param">tags (optional)</div>
  
        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Tags to filter by </div>
====1
1:123c
      <div class="return-type"><a href="#"></a></div>
2:124c
3:124c
      <div class="return-type"><a href="#array">array[Pet]</a></div>
====1
1:125a
2:127,152c
3:127,152c
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/json</div>
      <pre class="example"><code>[ {
    &quot;tags&quot; : [ {
      &quot;id&quot; : 123456789,
      &quot;name&quot; : &quot;aeiou&quot;
    } ],
    &quot;id&quot; : 123456789,
    &quot;category&quot; : {
      &quot;id&quot; : 123456789,
      &quot;name&quot; : &quot;aeiou&quot;
    },
    &quot;status&quot; : &quot;aeiou&quot;,
    &quot;name&quot; : &quot;doggie&quot;,
    &quot;photoUrls&quot; : [ &quot;aeiou&quot; ]
  } ]</code></pre>
      
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/xml</div>
      <pre class="example"><code>&lt;Pet&gt;
    &lt;id&gt;123456&lt;/id&gt;
    &lt;name&gt;doggie&lt;/name&gt;
    &lt;photoUrls&gt;string&lt;/photoUrls&gt;
    &lt;status&gt;string&lt;/status&gt;
  &lt;/Pet&gt;</code></pre>
      
====1
1:130,132c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /user/{username}</code></pre></div>
      <div class="method-summary"><span class="nickname">getUserByName</span> Get user by user name</div>
      <div class="method-notes"></div>
2:157,160c
3:157,160c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /pet/{petId}</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Pet</span></div>
      <div class="method-summary"><span class="nickname">getPetById</span> Find pet by ID</div>
      <div class="method-notes">Returns a pet when ID &lt; 10.  ID &gt; 10 or nonintegers will simulate API error conditions</div>
====1
1:136c
        <div class="param">username (required)</div>
2:164c
3:164c
        <div class="param">petId (required)</div>
====1
1:138c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; The name that needs to be fetched. Use user1 for testing.  </div>
2:166c
3:166c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of pet that needs to be fetched </div>
====1
1:143c
      <div class="return-type"><a href="#">User</a></div>
2:171c
3:171c
      <div class="return-type"><a href="#">Pet</a></div>
====1
1:148c
      <pre class="example"><code>{\n  "id" : 123456789,\n  "lastName" : "aeiou",\n  "phone" : "aeiou",\n  "username" : "aeiou",\n  "email" : "aeiou",\n  "userStatus" : 123,\n  "firstName" : "aeiou",\n  "password" : "aeiou"\n}</code></pre>
2:176,189c
3:176,189c
      <pre class="example"><code>{
    &quot;tags&quot; : [ {
      &quot;id&quot; : 123456789,
      &quot;name&quot; : &quot;aeiou&quot;
    } ],
    &quot;id&quot; : 123456789,
    &quot;category&quot; : {
      &quot;id&quot; : 123456789,
      &quot;name&quot; : &quot;aeiou&quot;
    },
    &quot;status&quot; : &quot;aeiou&quot;,
    &quot;name&quot; : &quot;doggie&quot;,
    &quot;photoUrls&quot; : [ &quot;aeiou&quot; ]
  }</code></pre>
====1
1:152c
      <pre class="example"><code><User>\n  <id>123456</id>\n  <username>string</username>\n  <firstName>string</firstName>\n  <lastName>string</lastName>\n  <email>string</email>\n  <password>string</password>\n  <phone>string</phone>\n  <userStatus>0</userStatus>\n</User></code></pre>
2:193,198c
3:193,198c
      <pre class="example"><code>&lt;Pet&gt;
    &lt;id&gt;123456&lt;/id&gt;
    &lt;name&gt;doggie&lt;/name&gt;
    &lt;photoUrls&gt;string&lt;/photoUrls&gt;
    &lt;status&gt;string&lt;/status&gt;
  &lt;/Pet&gt;</code></pre>
====1
1:158,160c
      <div class="method-path"><pre class="put"><code class="huge"><span>put</span>: /user/{username}</code></pre></div>
      <div class="method-summary"><span class="nickname">updateUser</span> Updated user</div>
      <div class="method-notes">This can only be done by the logged in user.</div>
2:204,207c
3:204,207c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /pet/{petId}</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Pet</span></div>
      <div class="method-summary"><span class="nickname">updatePetWithForm</span> Updates a pet in the store with form data</div>
      <div class="method-notes"></div>
====1
1:164c
        <div class="param">username (required)</div>
2:211c
3:211c
        <div class="param">petId (required)</div>
====1
1:166,167c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; name that need to be deleted </div>
        <div class="param">body (optional)</div>
2:213,214c
3:213,214c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of pet that needs to be updated </div>
        <div class="param">name (optional)</div>
====1
1:169c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; Updated user object </div>
2:216,219c
3:216,219c
        <div class="param-desc"><span class="param-type">Form Parameter</span> &mdash; Updated name of the pet </div>
        <div class="param">status (optional)</div>
  
        <div class="param-desc"><span class="param-type">Form Parameter</span> &mdash; Updated status of the pet </div>
====1
1:181,183c
      <div class="method-path"><pre class="delete"><code class="huge"><span>delete</span>: /user/{username}</code></pre></div>
      <div class="method-summary"><span class="nickname">deleteUser</span> Delete user</div>
      <div class="method-notes">This can only be done by the logged in user.</div>
2:231,234c
3:231,234c
      <div class="method-path"><pre class="delete"><code class="huge"><span>delete</span>: /pet/{petId}</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Pet</span></div>
      <div class="method-summary"><span class="nickname">deletePet</span> Deletes a pet</div>
      <div class="method-notes"></div>
====1
1:187c
        <div class="param">username (required)</div>
2:238c
3:238c
        <div class="param">api_key (optional)</div>
====1
1:189c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; The name that needs to be deleted </div>
2:240,243c
3:240,243c
        <div class="param-desc"><span class="param-type">Header Parameter</span> &mdash;  </div>
        <div class="param">petId (required)</div>
  
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Pet id to delete </div>
====1
1:200,201c
    
    
2:253a
3:253a
====1
1:203,204c
      <div class="method-path"><pre class="put"><code class="huge"><span>put</span>: /pet</code></pre></div>
      <div class="method-summary"><span class="nickname">updatePet</span> Update an existing pet</div>
2:255,257c
3:255,257c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /pet/{petId}/uploadImage</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Pet</span></div>
      <div class="method-summary"><span class="nickname">uploadFile</span> uploads an image</div>
====1
1:209c
        <div class="param">body (optional)</div>
2:262c
3:262c
        <div class="param">petId (required)</div>
====1
1:211c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; Pet object that needs to be added to the store </div>
2:264,270c
3:264,270c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of pet to update </div>
        <div class="param">additionalMetadata (optional)</div>
  
        <div class="param-desc"><span class="param-type">Form Parameter</span> &mdash; Additional data to pass to server </div>
        <div class="param">file (optional)</div>
  
        <div class="param-desc"><span class="param-type">Form Parameter</span> &mdash; file to upload </div>
====1
1:223,225c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /pet</code></pre></div>
      <div class="method-summary"><span class="nickname">addPet</span> Add a new pet to the store</div>
      <div class="method-notes"></div>
2:282,285c
3:282,285c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /store/inventory</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Store</span></div>
      <div class="method-summary"><span class="nickname">getInventory</span> Returns pet inventories by status</div>
      <div class="method-notes">Returns a map of status codes to quantities</div>
====1
1:229,231c
        <div class="param">body (optional)</div>
  
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; Pet object that needs to be added to the store </div>
2:288a
3:288a
====1
1:236c
      <div class="return-type"><a href="#"></a></div>
2:293c
3:293c
      <div class="return-type"><a href="#map">map[String, Integer]</a></div>
====1
1:238a
2:296,305c
3:296,305c
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/json</div>
      <pre class="example"><code>{
    &quot;key&quot; : 123
  }</code></pre>
      
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/xml</div>
      <pre class="example"><code>not implemented com.wordnik.swagger.models.properties.MapProperty@3e</code></pre>
      
====1
1:243,245c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /pet/findByStatus</code></pre></div>
      <div class="method-summary"><span class="nickname">findPetsByStatus</span> Finds Pets by status</div>
      <div class="method-notes">Multiple status values can be provided with comma seperated strings</div>
2:310,313c
3:310,313c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /store/order</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Store</span></div>
      <div class="method-summary"><span class="nickname">placeOrder</span> Place an order for a pet</div>
      <div class="method-notes"></div>
====1
1:249c
        <div class="param">status (optional)</div>
2:317c
3:317c
        <div class="param">body (optional)</div>
====1
1:251c
        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Status values that need to be considered for filter </div>
2:319c
3:319c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; order placed for purchasing the pet </div>
====1
1:256c
      <div class="return-type"><a href="#array">array[Pet]</a></div>
2:324c
3:324c
      <div class="return-type"><a href="#">Order</a></div>
====1
1:261c
      <pre class="example"><code>[ {\n  "tags" : [ {\n    "id" : 123456789,\n    "name" : "aeiou"\n  } ],\n  "id" : 123456789,\n  "category" : {\n    "id" : 123456789,\n    "name" : "aeiou"\n  },\n  "status" : "aeiou",\n  "name" : "doggie",\n  "photoUrls" : [ "aeiou" ]\n} ]</code></pre>
2:329,336c
3:329,336c
      <pre class="example"><code>{
    &quot;id&quot; : 123456789,
    &quot;petId&quot; : 123456789,
    &quot;complete&quot; : true,
    &quot;status&quot; : &quot;aeiou&quot;,
    &quot;quantity&quot; : 123,
    &quot;shipDate&quot; : &quot;2015-05-21T05:49:06.118+0000&quot;
  }</code></pre>
====1
1:265c
      <pre class="example"><code><Pet>\n  <id>123456</id>\n  <Category>\n    <id>123456</id>\n    <name>string</name>\n  </Category>\n  <name>doggie</name>\n  <photoUrls>string</photoUrls>\n  <Tag>\n    <id>123456</id>\n    <name>string</name>\n  </Tag>\n  <status>string</status>\n</Pet></code></pre>
2:340,347c
3:340,347c
      <pre class="example"><code>&lt;Order&gt;
    &lt;id&gt;123456&lt;/id&gt;
    &lt;petId&gt;123456&lt;/petId&gt;
    &lt;quantity&gt;0&lt;/quantity&gt;
    &lt;shipDate&gt;2015-05-20T22:49:06.120Z&lt;/shipDate&gt;
    &lt;status&gt;string&lt;/status&gt;
    &lt;complete&gt;true&lt;/complete&gt;
  &lt;/Order&gt;</code></pre>
====1
1:271,273c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /pet/findByTags</code></pre></div>
      <div class="method-summary"><span class="nickname">findPetsByTags</span> Finds Pets by tags</div>
      <div class="method-notes">Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.</div>
2:353,356c
3:353,356c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /store/order/{orderId}</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Store</span></div>
      <div class="method-summary"><span class="nickname">getOrderById</span> Find purchase order by ID</div>
      <div class="method-notes">For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generated exceptions</div>
====1
1:277c
        <div class="param">tags (optional)</div>
2:360c
3:360c
        <div class="param">orderId (required)</div>
====1
1:279c
        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Tags to filter by </div>
2:362c
3:362c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of pet that needs to be fetched </div>
====1
1:284c
      <div class="return-type"><a href="#array">array[Pet]</a></div>
2:367c
3:367c
      <div class="return-type"><a href="#">Order</a></div>
====1
1:289c
      <pre class="example"><code>[ {\n  "tags" : [ {\n    "id" : 123456789,\n    "name" : "aeiou"\n  } ],\n  "id" : 123456789,\n  "category" : {\n    "id" : 123456789,\n    "name" : "aeiou"\n  },\n  "status" : "aeiou",\n  "name" : "doggie",\n  "photoUrls" : [ "aeiou" ]\n} ]</code></pre>
2:372,379c
3:372,379c
      <pre class="example"><code>{
    &quot;id&quot; : 123456789,
    &quot;petId&quot; : 123456789,
    &quot;complete&quot; : true,
    &quot;status&quot; : &quot;aeiou&quot;,
    &quot;quantity&quot; : 123,
    &quot;shipDate&quot; : &quot;2015-05-21T05:49:06.121+0000&quot;
  }</code></pre>
====1
1:293c
      <pre class="example"><code><Pet>\n  <id>123456</id>\n  <Category>\n    <id>123456</id>\n    <name>string</name>\n  </Category>\n  <name>doggie</name>\n  <photoUrls>string</photoUrls>\n  <Tag>\n    <id>123456</id>\n    <name>string</name>\n  </Tag>\n  <status>string</status>\n</Pet></code></pre>
2:383,390c
3:383,390c
      <pre class="example"><code>&lt;Order&gt;
    &lt;id&gt;123456&lt;/id&gt;
    &lt;petId&gt;123456&lt;/petId&gt;
    &lt;quantity&gt;0&lt;/quantity&gt;
    &lt;shipDate&gt;2015-05-20T22:49:06.122Z&lt;/shipDate&gt;
    &lt;status&gt;string&lt;/status&gt;
    &lt;complete&gt;true&lt;/complete&gt;
  &lt;/Order&gt;</code></pre>
====1
1:299,301c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /pet/{petId}</code></pre></div>
      <div class="method-summary"><span class="nickname">getPetById</span> Find pet by ID</div>
      <div class="method-notes">Returns a pet when ID &lt; 10.  ID &gt; 10 or nonintegers will simulate API error conditions</div>
2:396,399c
3:396,399c
      <div class="method-path"><pre class="delete"><code class="huge"><span>delete</span>: /store/order/{orderId}</code></pre></div>
      <div class="method-tags"> <span class="method-tag">Store</span></div>
      <div class="method-summary"><span class="nickname">deleteOrder</span> Delete purchase order by ID</div>
      <div class="method-notes">For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors</div>
====1
1:305c
        <div class="param">petId (required)</div>
2:403c
3:403c
        <div class="param">orderId (required)</div>
====1
1:307c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of pet that needs to be fetched </div>
2:405c
3:405c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of the order that needs to be deleted </div>
====1
1:312c
      <div class="return-type"><a href="#">Pet</a></div>
2:410c
3:410c
      <div class="return-type"><a href="#"></a></div>
====1
1:315,322c
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/json</div>
      <pre class="example"><code>{\n  "tags" : [ {\n    "id" : 123456789,\n    "name" : "aeiou"\n  } ],\n  "id" : 123456789,\n  "category" : {\n    "id" : 123456789,\n    "name" : "aeiou"\n  },\n  "status" : "aeiou",\n  "name" : "doggie",\n  "photoUrls" : [ "aeiou" ]\n}</code></pre>
      
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/xml</div>
      <pre class="example"><code><Pet>\n  <id>123456</id>\n  <Category>\n    <id>123456</id>\n    <name>string</name>\n  </Category>\n  <name>doggie</name>\n  <photoUrls>string</photoUrls>\n  <Tag>\n    <id>123456</id>\n    <name>string</name>\n  </Tag>\n  <status>string</status>\n</Pet></code></pre>
      
2:412a
3:412a
====1
1:327,329c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /pet/{petId}</code></pre></div>
      <div class="method-summary"><span class="nickname">updatePetWithForm</span> Updates a pet in the store with form data</div>
      <div class="method-notes"></div>
2:417,420c
3:417,420c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /user</code></pre></div>
      <div class="method-tags"> <span class="method-tag">User</span></div>
      <div class="method-summary"><span class="nickname">createUser</span> Create user</div>
      <div class="method-notes">This can only be done by the logged in user.</div>
====1
1:333,339c
        <div class="param">petId (required)</div>
  
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of pet that needs to be updated </div>
        <div class="param">name (optional)</div>
  
        <div class="param-desc"><span class="param-type">Form Parameter</span> &mdash; Updated name of the pet </div>
        <div class="param">status (optional)</div>
2:424c
3:424c
        <div class="param">body (optional)</div>
====1
1:341c
        <div class="param-desc"><span class="param-type">Form Parameter</span> &mdash; Updated status of the pet </div>
2:426c
3:426c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; Created user object </div>
====1
1:353,354c
      <div class="method-path"><pre class="delete"><code class="huge"><span>delete</span>: /pet/{petId}</code></pre></div>
      <div class="method-summary"><span class="nickname">deletePet</span> Deletes a pet</div>
2:438,440c
3:438,440c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /user/createWithArray</code></pre></div>
      <div class="method-tags"> <span class="method-tag">User</span></div>
      <div class="method-summary"><span class="nickname">createUsersWithArrayInput</span> Creates list of users with given input array</div>
====1
1:359,362c
        <div class="param">api_key (optional)</div>
  
        <div class="param-desc"><span class="param-type">Header Parameter</span> &mdash;  </div>
        <div class="param">petId (required)</div>
2:445c
3:445c
        <div class="param">body (optional)</div>
====1
1:364c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; Pet id to delete </div>
2:447c
3:447c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; List of user object </div>
====1
1:376,377c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /pet/{petId}/uploadImage</code></pre></div>
      <div class="method-summary"><span class="nickname">uploadFile</span> uploads an image</div>
2:459,461c
3:459,461c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /user/createWithList</code></pre></div>
      <div class="method-tags"> <span class="method-tag">User</span></div>
      <div class="method-summary"><span class="nickname">createUsersWithListInput</span> Creates list of users with given input array</div>
====1
1:382,388c
        <div class="param">petId (required)</div>
  
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of pet to update </div>
        <div class="param">additionalMetadata (optional)</div>
  
        <div class="param-desc"><span class="param-type">Form Parameter</span> &mdash; Additional data to pass to server </div>
        <div class="param">file (optional)</div>
2:466c
3:466c
        <div class="param">body (optional)</div>
====1
1:390c
        <div class="param-desc"><span class="param-type">Form Parameter</span> &mdash; file to upload </div>
2:468c
3:468c
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; List of user object </div>
====1
1:401,402c
    
    
2:478a
3:478a
====1
1:404,406c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /store/inventory</code></pre></div>
      <div class="method-summary"><span class="nickname">getInventory</span> Returns pet inventories by status</div>
      <div class="method-notes">Returns a map of status codes to quantities</div>
2:480,483c
3:480,483c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /user/login</code></pre></div>
      <div class="method-tags"> <span class="method-tag">User</span></div>
      <div class="method-summary"><span class="nickname">loginUser</span> Logs user into the system</div>
      <div class="method-notes"></div>
====1
1:409a
2:487,492c
3:487,492c
        <div class="param">username (optional)</div>
  
        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; The user name for login </div>
        <div class="param">password (optional)</div>
  
        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; The password for login in clear text </div>
====1
1:414c
      <div class="return-type"><a href="#map">map[String, Integer]</a></div>
2:497c
3:497c
      <div class="return-type"><a href="#">String</a></div>
====1
1:419c
      <pre class="example"><code>{\n  "key" : 123\n}</code></pre>
2:502c
3:502c
      <pre class="example"><code>&quot;aeiou&quot;</code></pre>
====1
1:423c
      <pre class="example"><code>not implemented com.wordnik.swagger.models.properties.MapProperty@2acca551</code></pre>
2:506c
3:506c
      <pre class="example"><code>string</code></pre>
====1
1:429,430c
      <div class="method-path"><pre class="post"><code class="huge"><span>post</span>: /store/order</code></pre></div>
      <div class="method-summary"><span class="nickname">placeOrder</span> Place an order for a pet</div>
2:512,514c
3:512,514c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /user/logout</code></pre></div>
      <div class="method-tags"> <span class="method-tag">User</span></div>
      <div class="method-summary"><span class="nickname">logoutUser</span> Logs out current logged in user session</div>
====1
1:435,437c
        <div class="param">body (optional)</div>
  
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; order placed for purchasing the pet </div>
2:518a
3:518a
====1
1:442c
      <div class="return-type"><a href="#">Order</a></div>
2:523c
3:523c
      <div class="return-type"><a href="#"></a></div>
====1
1:445,452c
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/json</div>
      <pre class="example"><code>{\n  "id" : 123456789,\n  "petId" : 123456789,\n  "complete" : true,\n  "status" : "aeiou",\n  "quantity" : 123,\n  "shipDate" : "2015-04-05T03:02:18.855+0000"\n}</code></pre>
      
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/xml</div>
      <pre class="example"><code><Order>\n  <id>123456</id>\n  <petId>123456</petId>\n  <quantity>0</quantity>\n  <shipDate>2015-04-04T20:02:18.857Z</shipDate>\n  <status>string</status>\n  <complete>true</complete>\n</Order></code></pre>
      
2:525a
3:525a
====1
1:457,459c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /store/order/{orderId}</code></pre></div>
      <div class="method-summary"><span class="nickname">getOrderById</span> Find purchase order by ID</div>
      <div class="method-notes">For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generated exceptions</div>
2:530,533c
3:530,533c
      <div class="method-path"><pre class="get"><code class="huge"><span>get</span>: /user/{username}</code></pre></div>
      <div class="method-tags"> <span class="method-tag">User</span></div>
      <div class="method-summary"><span class="nickname">getUserByName</span> Get user by user name</div>
      <div class="method-notes"></div>
====1
1:463c
        <div class="param">orderId (required)</div>
2:537c
3:537c
        <div class="param">username (required)</div>
====1
1:465c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of pet that needs to be fetched </div>
2:539c
3:539c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; The name that needs to be fetched. Use user1 for testing.  </div>
====1
1:470c
      <div class="return-type"><a href="#">Order</a></div>
2:544c
3:544c
      <div class="return-type"><a href="#">User</a></div>
====1
1:475c
      <pre class="example"><code>{\n  "id" : 123456789,\n  "petId" : 123456789,\n  "complete" : true,\n  "status" : "aeiou",\n  "quantity" : 123,\n  "shipDate" : "2015-04-05T03:02:18.859+0000"\n}</code></pre>
2:549,558c
3:549,558c
      <pre class="example"><code>{
    &quot;id&quot; : 1,
    &quot;username&quot; : &quot;johnp&quot;,
    &quot;firstName&quot; : &quot;John&quot;,
    &quot;lastName&quot; : &quot;Public&quot;,
    &quot;email&quot; : &quot;johnp@swagger.io&quot;,
    &quot;password&quot; : &quot;-secret-&quot;,
    &quot;phone&quot; : &quot;0123456789&quot;,
    &quot;userStatus&quot; : 0
  }</code></pre>
====1
1:477,479c
      <h3 class="field-label">Example data</h3>
      <div class="example-data-content-type">Content-Type: application/xml</div>
      <pre class="example"><code><Order>\n  <id>123456</id>\n  <petId>123456</petId>\n  <quantity>0</quantity>\n  <shipDate>2015-04-04T20:02:18.859Z</shipDate>\n  <status>string</status>\n  <complete>true</complete>\n</Order></code></pre>
2:560,582c
3:560,582c
    </div> <!-- method -->
    <hr>
    
    <div class="method">
      <div class="method-path"><pre class="put"><code class="huge"><span>put</span>: /user/{username}</code></pre></div>
      <div class="method-tags"> <span class="method-tag">User</span></div>
      <div class="method-summary"><span class="nickname">updateUser</span> Updated user</div>
      <div class="method-notes">This can only be done by the logged in user.</div>
  
      <h3 class="field-label">Parameters</h3>
      <div class="field-items">
        <div class="param">username (required)</div>
  
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; name that need to be deleted </div>
        <div class="param">body (optional)</div>
  
        <div class="param-desc"><span class="param-type">Body Parameter</span> &mdash; Updated user object </div>
        
      </div>  <!-- field-items -->
      <h3 class="field-label">Return type</h3>
  
      <div class="return-type"><a href="#"></a></div>
  
====1
1:485,487c
      <div class="method-path"><pre class="delete"><code class="huge"><span>delete</span>: /store/order/{orderId}</code></pre></div>
      <div class="method-summary"><span class="nickname">deleteOrder</span> Delete purchase order by ID</div>
      <div class="method-notes">For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors</div>
2:588,591c
3:588,591c
      <div class="method-path"><pre class="delete"><code class="huge"><span>delete</span>: /user/{username}</code></pre></div>
      <div class="method-tags"> <span class="method-tag">User</span></div>
      <div class="method-summary"><span class="nickname">deleteUser</span> Delete user</div>
      <div class="method-notes">This can only be done by the logged in user.</div>
====1
1:491c
        <div class="param">orderId (required)</div>
2:595c
3:595c
        <div class="param">username (required)</div>
====1
1:493c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; ID of the order that needs to be deleted </div>
2:597c
3:597c
        <div class="param-desc"><span class="param-type">Path Parameter</span> &mdash; The name that needs to be deleted </div>
====1
1:633a
2:738c
3:738c
    margin-bottom: 2px;
====1
1:714a
2:820,832c
3:820,832c
  .method-tags {
    text-align: right;
  }
  
  .method-tag {
    background: none repeat scroll 0% 0% #24A600;
    border-radius: 3px;
    padding: 2px 10px;
    margin: 2px;
    color: #FFF;
    display: inline-block;
    text-decoration: none;
  }
